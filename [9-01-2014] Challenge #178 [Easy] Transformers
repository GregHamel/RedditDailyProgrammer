#[9/01/2014] Challenge #178 [Easy] Transformers: Matrices in Disguise, pt. 1
#http://www.reddit.com/r/dailyprogrammer/comments/2f6a7b/9012014_challenge_178_easy_transformers_matrices/
import math

point = [0.0,5.0]

def translate(p,a,b):
    return [p[0]+a,p[1]+b]

def rotate(p,a,b,c):
    return [round(a + math.cos(-c)*(p[0]-a) - math.sin(-c)*(p[1]-b), 3),
            round(b + math.sin(-c)*(p[0]-a) + math.cos(-c)*(p[1]-b), 3)]

def scale(p,a,b, c):
    return [a+(p[0]-a)*c, b+(p[1]-b)*c ]

def reflect(p, axis):
    if axis == "Y":
        return [p[0]*-1,p[1]]
    return [p[0],p[1]*-1]


def run_commands(point):
    p = point[:]
    p= translate(p, 3, 2)
    print(p)
    p= scale(p,1,3,0.5)
    print(p)
    p= rotate(p,3,2,1.57079632679)
    print(p)
    p= reflect(p,"X")
    print(p)
    p= translate(p,2,-1)
    print(p)
    p= scale(p,0,0,-0.25)
    print(p)
    p= rotate(p,1,-3,3.14159265359)
    print(p)
    p= reflect(p,"Y")
    print(p)

run_commands(point)